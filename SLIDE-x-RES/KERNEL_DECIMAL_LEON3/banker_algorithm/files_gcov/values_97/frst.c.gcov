        -:    0:Source:/home/federico/Scrivania/SLIDE-x-Repository/SLIDE-x/SLIDE-x-BENCH/KERNEL/banker_algorithm/frst.c
        -:    0:Graph:frst.gcno
        -:    0:Data:frst.gcda
        -:    0:Runs:1
        -:    1:#include <stdint.h>
        -:    2:#include <values.h>
        -:    3:
        -:    4:typedef double TARGET_TYPE;
        -:    5:typedef uint8_t TARGET_INDEX;
        -:    6:
        -:    7:
        -:    8:TARGET_TYPE need[size][size];
        -:    9:
        -:   10://TARGET_TYPE size;
        -:   11:
        -:   12:TARGET_INDEX i = 0;
        -:   13:TARGET_INDEX j = 0;
        -:   14:
        -:   15:TARGET_TYPE found = 0;
        -:   16:
function create_needs called 1 returned 100% blocks executed 100%
        1:   17:void create_needs()
        -:   18:{
       28:   19:	for(i = 0; i < size; i++)
unconditional  0 taken 1
unconditional  1 taken 27
branch  2 taken 27
branch  3 taken 1 (fallthrough)
        -:   20:	{
      756:   21:		for(j = 0; j < size; j++)
unconditional  0 taken 27
branch  1 taken 729
branch  2 taken 27 (fallthrough)
      729:   22:			need[i][j] = max[i][j] - allocated[i][j];
unconditional  0 taken 729
        -:   23:	}
        -:   24:
        1:   25:}
        -:   26:
function banker_algorithm called 1 returned 100% blocks executed 83%
        1:   27:TARGET_TYPE banker_algorithm()
        -:   28:{	
       1*:   29:	for(i = 0; i < size; i++)
unconditional  0 taken 1
unconditional  1 never executed
branch  2 taken 1
branch  3 taken 0 (fallthrough)
        -:   30:	{
       12:   31:		for(j = 0; j < size; j++)
unconditional  0 taken 1
unconditional  1 taken 11
branch  2 taken 12
branch  3 taken 0 (fallthrough)
        -:   32:		{
       12:   33:			available[j] -= need[i][j];
       12:   34:			allocated[i][j] += need[i][j];
        -:   35:			
       12:   36:			found = 0;
        -:   37:			
       12:   38:			if(need[i][j] <= available[j] /*&&*/ 
branch  0 taken 11 (fallthrough)
branch  1 taken 1
        -:   39:				/*need[i][j] >= 0 */ )
        -:   40:			{
       11:   41:				available[j]  += allocated[i][j];
       11:   42:				found = 1;
unconditional  0 taken 11
        -:   43:			}
        -:   44:
       12:   45:			if(found == 0)
branch  0 taken 1 (fallthrough)
branch  1 taken 11
        1:   46:				return -1;
unconditional  0 taken 1
        -:   47:		}
        -:   48:
        -:   49:	}
        -:   50:
    #####:   51:	return 1;
unconditional  0 never executed
        -:   52:}
        -:   53:
        -:   54:
function main called 1 returned 100% blocks executed 100%
        1:   55:void main()
        -:   56:{
        -:   57:
        1:   58:	create_needs();
call    0 returned 1
        1:   59:	banker_algorithm();
call    0 returned 1
        1:   60:}
