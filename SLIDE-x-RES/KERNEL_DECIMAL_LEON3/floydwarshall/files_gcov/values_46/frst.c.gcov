        -:    0:Source:/home/federico/Scrivania/SLIDE-x-Repository/SLIDE-x/SLIDE-x-BENCH/KERNEL/floydwarshall/frst.c
        -:    0:Graph:frst.gcno
        -:    0:Data:frst.gcda
        -:    0:Runs:1
        -:    1:#include <stdint.h>
        -:    2:#include <values.h>
        -:    3:
        -:    4:typedef double TARGET_TYPE;
        -:    5:typedef uint8_t TARGET_INDEX;
        -:    6:
        -:    7:  TARGET_INDEX i;
        -:    8:  TARGET_INDEX j;
        -:    9:  TARGET_INDEX h;
        -:   10:  
        -:   11:/*
        -:   12: * The graph is rapresented with an adjacency map that contains the 
        -:   13: * costs of edges between nodes 
        -:   14: */
        -:   15:
function floydwarshall called 1 returned 100% blocks executed 100%
        1:   16:void floydwarshall()
        -:   17:{
        -:   18:  /* 
        -:   19:   * The algorithm checks each path between nodes i and j that going through h node
        -:   20:   * if a minimum cost path is found updates the entry in b table
        -:   21:   */
        -:   22:
        1:   23:  for(h = 0;
unconditional  0 taken 1
       14:   24:    h < size;
branch  0 taken 13
branch  1 taken 1 (fallthrough)
       13:   25:    h++)
unconditional  0 taken 13
        -:   26:  {
       13:   27:    for(i = 0;
unconditional  0 taken 13
      182:   28:      i < size;
branch  0 taken 169
branch  1 taken 13 (fallthrough)
      169:   29:      i++)
unconditional  0 taken 169
        -:   30:    {
      169:   31:      for(j = 0;
unconditional  0 taken 169
     2366:   32:        j < size;
branch  0 taken 2197
branch  1 taken 169 (fallthrough)
     2197:   33:        j++)
unconditional  0 taken 2197
        -:   34:      {
     2197:   35:        if(a[i][h] + a[h][j] < a[i][j])
branch  0 taken 2183 (fallthrough)
branch  1 taken 14
     2183:   36:          a[i][j] = a[i][h] + a[h][j];
unconditional  0 taken 2183
        -:   37:      }
        -:   38:    }
        -:   39:  }
        -:   40:
        1:   41:}
        -:   42:
function main called 1 returned 100% blocks executed 100%
        1:   43:void main()
        -:   44:{
        1:   45:  floydwarshall();
call    0 returned 1
        1:   46:}
